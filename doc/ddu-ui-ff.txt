*ddu-ui-ff.txt*	Standard UI for ddu.vim

Author: Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS					*ddu-ui-ff-contents*

Introduction		|ddu-ui-ff-introduction|
Install			|ddu-ui-ff-install|
Interface		|ddu-ui-ff-interface|
  Functions		  |ddu-ui-ff-functions|
  Actions		  |ddu-ui-ff-actions|
  Params		  |ddu-ui-ff-params|
Examples		|ddu-ui-ff-examples|
FAQ			|ddu-ui-ff-faq|
Compatibility		|ddu-ui-ff-compatibility|


==============================================================================
INTRODUCTION					*ddu-ui-ff-introduction*

This UI is standard fuzzy finder.


==============================================================================
INSTALL						*ddu-ui-ff-install*

Please install both "ddu.vim" and "denops.vim".

https://github.com/Shougo/ddu.vim
https://github.com/vim-denops/denops.vim


==============================================================================
INTERFACE					*ddu-ui-ff-interface*


------------------------------------------------------------------------------
FUNCTIONS					*ddu-ui-ff-functions*

						*ddu#ui#ff#do_action()*
ddu#ui#ff#do_action({action-name}[, {params}])
		It is deprecated.  Please use |ddu#ui#do_action()|
		instead.

						*ddu#ui#ff#multi_actions()*
ddu#ui#ff#multi_actions([{action-name1}[, {params1}], ...])
		It is deprecated.  Please use |ddu#ui#multi_actions()|
		instead.

						*ddu#ui#ff#execute()*
ddu#ui#ff#execute({command})
		Execute {command} in the UI window.
		NOTE: It does not execute |:redraw| automatically.
		You need to execute |:redraw| if needed.

------------------------------------------------------------------------------
ACTIONS						*ddu-ui-ff-actions*

					*ddu-ui-ff-action-chooseAction*
chooseAction
		Choose and fire the action by ddu UI.

		NOTE: "ddu-source-action" is required.
		https://github.com/Shougo/ddu-source-action

					*ddu-ui-ff-action-clearSelectAllItems*
clearSelectAllItems
		Clear all selected items.

					*ddu-ui-ff-action-closeFilterWindow*
closeFilterWindow
		Close the filter window and move to the parent UI window.

					*ddu-ui-ff-action-collapseItem*
collapseItem
		Collapse the item tree.

					*ddu-ui-ff-action-cursorNext*
cursorNext
		params:
			{count}: Move count

		Move the cursor to the next.

					*ddu-ui-ff-action-cursorPrevious*
cursorPrevious
		params:
			{count}: Move count

		Move the cursor to the previous.

					*ddu-ui-ff-action-expandItem*
expandItem
		params:
			{mode}: The supported values are:

				"toggle":
					Close the item tree if the directory
					is opened.

			{maxLevel}:
				Maximum expand recursive level.
				If it is less than 0, infinite recursive.

		Expand the item tree.

						*ddu-ui-ff-action-getItem*
getItem
		Set cursor item to "b:ddu_ui_item" variable.

					*ddu-ui-ff-action-getSelectedItems*
getSelectedItems
		Set selected items to "b:ddu_ui_selected_items" variable.

						*ddu-ui-ff-action-inputAction*
inputAction
		Choose and fire the action by |input()|.

						*ddu-ui-ff-action-itemAction*
itemAction
		params:
			{name}: Action name
			{params}: Action params dictionary

		Close the UI window and fire {name} action for selected or
		current cursor items.
		You can find the actions list in item's kind documentation.
		If {name} is empty, "default" will be used.

		NOTE: You cannot mix multiple kinds/sources.

					*ddu-ui-ff-action-leaveFilterWindow*
leaveFilterWindow
		Move to the parent UI window.

					*ddu-ui-ff-action-openFilterWindow*
openFilterWindow
		Open the filter window.

					*ddu-ui-ff-action-preview*
preview
		params:
			{syntaxLimitChars}: 	Max number of chars to apply
						syntax to previewed contents.
						(Default: 400000)

			The remaining params are passed to |ddu-kinds|.
			See also |ddu-kind-attribute-getPreviewer| and kinds
			documentation.

		Preview the item in preview window.

					*ddu-ui-ff-action-previewPath*
previewPath

		Preview the item path in echo area.

						*ddu-ui-ff-action-quit*
quit
		Quit the UI window.

					*ddu-ui-ff-action-refreshItems*
refreshItems
		Refresh the items.

					*ddu-ui-ff-action-toggleAllItems*
toggleAllItems
		Toggle selected state for the all items.

					*ddu-ui-ff-action-toggleSelectItem*
toggleSelectItem
		Toggle selected state for cursor item.

					*ddu-ui-ff-action-updateOptions*
updateOptions
		params:
			{option-name}: Option name and value

		Update current options and redraw the UI.
		Refer to |ddu-options| about options.

==============================================================================
PARAMS						*ddu-ui-ff-params*

						*ddu-ui-ff-param-autoAction*
autoAction	(dictionary)
		If it is specified, the UI action is executed when the cursor
		is moved. It has the following keys.

		delay				(number)	(Optional)
		Time in milliseconds to delay the auto action.
		If you feel slow, specify large value.
		Set 0 to disable debouncing.

		Default: 10

		name				(string)	(Required)
		Action name

		params				(dictionary)	(Optional)
		Action params

		Default: {}

		sync				(boolean)	(Optional)
		If it is true, action is executed synchronously.
		NOTE: If it is false, the screen may be flickered.

		Default: v:true

						*ddu-ui-ff-param-autoResize*
autoResize	(boolean)
		Auto resize the window height automatically.

		Default: v:false

						*ddu-ui-ff-param-cursorPos*
cursorPos	(number)
		Select {number} candidate.  It is 0 origin.
		If you set the option, cursor restore feature is disabled.

		Default: -1

					*ddu-ui-ff-param-displaySourceName*
displaySourceName	(string)
		Display source name in the buffer. Following values are
		available:

		"long": display full source name
		"short": display shorter source name
		"no": does not display

		Default: "no"

						*ddu-ui-ff-param-displayTree*
displayTree	(boolean)
		Display tree structure.

		Default: v:false

					*ddu-ui-ff-param-floatingBorder*
floatingBorder		(string | list)
		Specify the style of the window border if
		|ddu-ui-ff-param-split| is "floating".
		See |nvim_open_win()| or |popup_create-arguments| for the
		detail.

		Following values are available:

		"none": Disabled.
		"single": A single line box.
		"double": A double line box.
		"rounded": neovim only.
		"solid": neovim only.
		"shadow": neovim only.
		array: Specifify the eight chars building up the border.

		Default: "none"

					*ddu-ui-ff-param-floatingTitle*
floatingTitle		(string | list)
		Specify the title of the window border if
		|ddu-ui-ff-param-floatingBorder| is not "none".

		Default: ""

					*ddu-ui-ff-param-floatingTitlePos*
floatingTitlePos	(string)
		Specify the title position of the window border if
		|ddu-ui-ff-param-floatingBorder| is not "none".
		See |nvim_open_win()| for the detail.
		NOTE: It is neovim only.

		Default: "left"

				*ddu-ui-ff-param-filterFloatingPosition*
filterFloatingPosition	(string)
		Specify the filter floating window position as {position}.

		If {position} is set to "bottom", the filter will be displayed
		at the bottom.
		If {position} is "top", the filter will be displayed at the
		top.

		NOTE: To use it, you need to use neovim and
		|ddu-ui-ff-param-filterSplitDirection| must be "floating".

		Default: "top"

					*ddu-ui-ff-param-filterFloatingTitle*
filterFloatingTitle	(string | list)
		Specify the title of the filter floating window with border if
		|ddu-ui-ff-param-floatingBorder| is not "none".
		See |nvim_open_win()| for the detail.
		NOTE: It is neovim only.

		Default: ""

				*ddu-ui-ff-param-filterFloatingTitlePos*
filterFloatingTitlePos	(string)
		Specify the title position of the filter floating window with
		border if |ddu-ui-ff-param-floatingBorder| is not "none".
		See |nvim_open_win()| for the detail.
		NOTE: It is neovim only.

		Default: "left"

					*ddu-ui-ff-param-filterSplitDirection*
filterSplitDirection	(string)
		Specify the filter window direction as {direction}.

		When {direction} is "floating", the filter uses neovim
		floating window. If statusline is at the bottom, the filter
		overwrites statusline. Otherwise, it is located one line below
		statusline.

		NOTE: To use "floating", you need to use neovim.

		Default: "topleft"

					*ddu-ui-ff-param-filterUpdateTime*
filterUpdateTime	(number)
		Specify the update time in the filter window.
		If it is less than equal 0, the feature will be disabled.

		Default: 0

					*ddu-ui-ff-param-highlights*
highlights	(dictionary)
		It specifies ddu-ui-ff buffer highlights.
		It can contain following keys

		filterText			(string)
		Specify filter text highlight.
		Default: "Normal"

		floating			(string)
		Specify floating window background highlight.
		Default: "NormalFloat"

		floatingBorder			(string)
		Specify border highlight of flowing window
		Default: "FloatBorder"

		preview				(string)
		Specify preview window highlight.
		Default: "Search"

		prompt				(string)
		Specify prompt text highlight in filter window.
		Default: "Special"

		selected			(string)
		Specify selected item highlight.
		Default: "Statement"

		Default: {}

						*ddu-ui-ff-param-ignoreEmpty*
ignoreEmpty	(boolean)
		Don't open the UI window if the items are empty.
		NOTE: It works only if the UI window is not visible.

		Default: v:false

					*ddu-ui-ff-param-immediateAction*
immediateAction (string)
		If it is not empty and the number of item is exactly one, it
		runs |ddu-ui-ff-action-itemAction| immediately.

		NOTE: You need to set |ddu-option-sync|.  Because UI window
		may be created before all sources are finished.
		NOTE: It works only if the UI window is not visible.

		Default: ""

						*ddu-ui-ff-param-onPreview*
onPreview	(function)
		It is called when |ddu-ui-ff-action-preview| is fired.
		NOTE: The function must be registered by
		|denops#callback#register()|.

						*ddu-ui-ff-param-previewCol*
previewCol	(number)
		Set the column position of the preview window if
		|ddu-ui-ff-param-previewFloating| is v:true.

		Default: 0

					*ddu-ui-ff-param-previewFloating*
previewFloating	(boolean)
		Use floating window in |ddu-ui-ff-action-preview|.

		Default: v:false

				*ddu-ui-ff-param-previewFloatingBorder*
previewFloatingBorder		(string | list)
		Specify the style of the preview window border if
		|ddu-ui-ff-param-previewFloating| is v:true.
		See |nvim_open_win()| for the detail.
		NOTE: It is neovim only.

		Default: "none"

					*ddu-ui-ff-param-previewFloatingTitle*
previewFloatingTitle	(string | list)
		Specify the title of the preview floating window with border
		if |ddu-ui-ff-param-previewFloatingBorder| is not "none".

		Default: ""

				*ddu-ui-ff-param-previewFloatingTitlePos*
previewFloatingTitlePos	(string)
		Specify the title position of the preview floating window with
		border if |ddu-ui-ff-param-previewFloatingBorder| is not
		"none".

		Default: "left"

				*ddu-ui-ff-param-previewFloatingZindex*
previewFloatingZindex		(number)
		Specify the style of the preview window zindex if
		|ddu-ui-ff-param-split| is "floating".

		Default: 100

					*ddu-ui-ff-param-previewHeight*
previewHeight	(number)
		Set the height of the |preview-window| in
		|ddu-ui-ff-action-preview|.
		If |ddu-ui-ff-param-previewFloating|, set the height of the
		floating window.

		Default: 10

						*ddu-ui-ff-param-previewRow*
previewRow	(number)
		Set the row position of the preview window if
		|ddu-ui-ff-param-previewFloating| is v:true.

		Default: 0

					*ddu-ui-ff-param-previewSplit*
previewSplit	(string)
		Specify preview split mode in |ddu-ui-ff-action-preview|.

		Following values are available:

		"horizontal": horizontal split
		"vertical": vertical split
		"no": no split

		Default: "horizontal"

						*ddu-ui-ff-param-previewWidth*
previewWidth	(number)
		Set the width of the |preview-window| in
		|ddu-ui-ff-action-preview|.
		If |ddu-ui-ff-param-previewFloating|, set the width of the
		floating window.

		Default: 80

					*ddu-ui-ff-param-previewWindowOptions*
previewWindowOptions	(list)
		Set the window options of the |preview-window| in
		|ddu-ui-ff-action-preview|.
		If |ddu-ui-ff-param-previewFloating| is set, set the options
		of the floating window.
		See |options| for the detail.
		NOTE: The options are applied in the array order.

		Default:

		[
			["&signcolumn", "no"],
			["&foldcolumn", 0],
			["&foldenable", 0],
			["&number", 0],
			["&wrap", 0],
		]

						*ddu-ui-ff-param-prompt*
prompt		(string)
		Specify the prompt in the filter window.
		NOTE: It must be one or two width characters.

		Default: ""

						*ddu-ui-ff-param-replaceCol*
replaceCol	(number)
		Set the column position of the replace current text after
		actions.
		It is useful for insert/command mode.

		Default: 0

						*ddu-ui-ff-param-reversed*
reversed	(boolean)
		Display the items in reversed order.
		NOTE: It may increase screen flicker.  Because the cursor must
		be moved if you narrowing text.

		Default: v:false

						*ddu-ui-ff-param-split*
split		(string)
		Specify split mode.

		Following values are available:

		"horizontal": horizontal split
		"vertical": vertical split
		"floating": use floating window feature
		"no": no split

		NOTE: If you have enabled "floating" in Vim,
		|ddu-ui-ff-param-startFilter| is enabled automatically.

		Default: "horizontal"

					*ddu-ui-ff-param-splitDirection*
splitDirection	(string)
		Specify split direction.

		Default: "botright"

						*ddu-ui-ff-param-startFilter*
startFilter	(boolean)
		If it is true, the filter window is opened automatically.
		NOTE: If it is enabled and |ddu-ui-ff-param-autoAction| is
		set, The restore cursor feature is disabled.

		Default: v:false

						*ddu-ui-ff-param-statusline*
statusline	(boolean)
		If it is true, the original 'statusline' value is set on the
		buffer.

		Default: v:true

						*ddu-ui-ff-param-winCol*
winCol		(number)
		Set the column position of the window if
		|ddu-ui-ff-param-split| is "floating".

		Default: ('columns' - winWidth) / 2

						*ddu-ui-ff-param-winHeight*
winHeight	(number)
		Set the height of the window if |ddu-ui-ff-param-split| is
		"horizontal".
		if |ddu-ui-ff-param-split| is "floating",
		set the height of the floating window.

		Default: 20

						*ddu-ui-ff-param-winRow*
winRow		(number)
		Set the row position of the window if |ddu-ui-ff-param-split|
		is "floating".
		If it is 1, the filter window position is always top.

		Default: &lines / 2 - 10

						*ddu-ui-ff-param-winwidth*
winWidth	(number)
		Set the width of the window if |ddu-ui-ff-param-split| is
		"vertical".
		if |ddu-ui-ff-param-split| is "floating", set the width of
		the floating window.

		Default: &columns / 2


==============================================================================
EXAMPLES					*ddu-ui-ff-examples*
>
	call ddu#custom#patch_global(#{
	    \   ui: 'ff',
	    \ })

	autocmd FileType ddu-ff call s:ddu_ff_my_settings()
	function s:ddu_ff_my_settings() abort
	  nnoremap <buffer> <CR>
	  \ <Cmd>call ddu#ui#do_action('itemAction')<CR>
	  nnoremap <buffer> <Space>
	  \ <Cmd>call ddu#ui#do_action('toggleSelectItem')<CR>
	  nnoremap <buffer> i
	  \ <Cmd>call ddu#ui#do_action('openFilterWindow')<CR>
	  nnoremap <buffer> q
	  \ <Cmd>call ddu#ui#do_action('quit')<CR>
	endfunction

	autocmd FileType ddu-ff-filter call s:ddu_ff_filter_my_settings()
	function s:ddu_ff_filter_my_settings() abort
	  inoremap <buffer> <CR>
	  \ <Esc><Cmd>call ddu#ui#do_action('closeFilterWindow')<CR>
	  nnoremap <buffer> <CR>
	  \ <Cmd>call ddu#ui#do_action('closeFilterWindow')<CR>
	endfunction
<

==============================================================================
FREQUENTLY ASKED QUESTIONS (FAQ)			*ddu-ui-ff-faq*

Q: I want to start narrowing in the first.

A: Please set |ddu-ui-ff-param-startFilter|.

Q: I want to call default action in the filter window.

A: >
	autocmd FileType ddu-ff-filter call s:ddu_ff_filter_my_settings()
	function s:ddu_ff_filter_my_settings() abort
	  inoremap <buffer> <CR>
	  \ <ESC><Cmd>call ddu#ui#do_action('itemAction')<CR>
	endfunction

Q: I want to move the cursor in the filter window, while in insert mode.

A: Really? It is not the Vim way to move the cursor while in insert mode. You
must force this behaviour. >

	autocmd FileType ddu-ff-filter call s:ddu_ff_filter_my_settings()
	function s:ddu_ff_filter_my_settings() abort
	  inoremap <buffer> <C-j>
	        \ <Cmd>call ddu#ui#do_action('cursorNext')<CR>
	  inoremap <buffer> <C-k>
	        \ <Cmd>call ddu#ui#do_action('cursorPrevious')<CR>
	endfunction

Q: I want to define |ddu-option-name| depend key mappings.

A: You can use "b:ddu_ui_name". >

	autocmd FileType ddu-ff call s:ddu_ff_my_settings()
	function s:ddu_ff_my_settings() abort
	  if b:ddu_ui_name ==# 'foo'
	    nnoremap <buffer> e
	    \ <Cmd>call ddu#ui#do_action('itemAction', {'name': 'edit'})<CR>
	  endif
	endfunction
	autocmd FileType ddu-ff-filter call s:ddu_ff_filter_my_settings()
	function s:ddu_ff_filter_my_settings() abort
	  if b:ddu_ui_name ==# 'foo'
	    nnoremap <buffer> <CR>
	    \ <Cmd>call ddu#ui#do_action('itemAction')<CR>
	  endif
	endfunction

Q: I want to pass params to the action when |ddu-ui-ff-action-chooseAction|.

A: You can pass params like this. >
	autocmd FileType ddu-ff call s:ddu_ff_my_settings()
	function s:ddu_ff_my_settings() abort
	  nnoremap <buffer> E
	  \ <Cmd>call ddu#ui#do_action('itemAction',
	  \ {'params': eval(input('params: '))})<CR>
	endfunction

Q: I want to use Vim syntax highlight in the buffer.

A: Please use |Syntax| autocmd.  |FileType| autocmd cannot change syntax
highlights.  |Syntax| autocmd must be called in |FileType| autocmd. >
Or you can use "syntax/ddu-ff.vim" file instead. >

	autocmd FileType ddu-ff call s:ddu_ff_my_settings()
	function s:ddu_ff_my_settings() abort
	  autocmd Syntax <buffer> call s:ddu_ff_my_syntax()
	endfunction
	function s:ddu_ff_my_syntax()
	  if b:ddu_ui_name ==# 'vim'
	    runtime! syntax/vim.vim
	  endif
	endfunction

Q: I want to custom the statusline.

A: You can disable the original statusline by |ddu-ui-ff-param-statusline|.
And you can get the status line information by "w:ddu_ui_ff_status" variable.

Q: I want to move to line quickly like denite.nvim's "quick-move" feature.

A: Please use qselect.vim for it.
https://github.com/Shougo/qselect.vim

Q: Why ddu-ui-ff does not support Vim's popup window feature instead of
neovim's floating window feature?
https://github.com/Shougo/ddu-ui-ff/issues/48

A: Because Vim's popup window feature is not focusable.
ddu-ui-ff implementation depends on the feature.  So the support is not
acceptable.

Q: |:close| does not move to the ddu-ui-ff window sometimes.

A: Please use |ddu-ui-ff-action-closeFilterWindow| instead.

Q: I want to toggle selected items in visual mode.

A: >
  xnoremap <buffer> <Space>
  \ :call ddu#ui#do_action('toggleSelectItem')<CR>

Q: |ddu#ui#ff#execute()| does not execute |:redraw| automatically.

A: It is feature.  Because it increases screen flicker.
You need to add |:redraw| command manually if needed.

Q: I want to use "ddu-ui-ff" in insert mode.
NOTE: It is experimental feature.

A: >
	inoremap <C-q> <Cmd>call ddu#start(#{
	\   name: 'file',
	\   ui: 'ff',
	\   input: matchstr(getline('.')[: col('.') - 1], '\f*$'),
	\   sources: [
	\     #{ name: 'file', options: #{ defaultAction: 'feedkeys' } },
	\   ],
	\   uiParams: #{
	\     ff: #{
	\       startFilter: v:true,
	\       replaceCol: match(getline('.')[: col('.') - 1], '\f*$') + 1,
	\     },
	\   },
	\ })<CR>

Q: I want to use "ddu-ui-ff" in command line mode.
NOTE: It is experimental feature.

A: >
	cnoremap <C-q> <Cmd>call ddu#start(#{
	\   name: 'file',
	\   ui: 'ff',
	\   input: matchstr(getcmdline()[: getcmdpos() - 2], '\f*$'),
	\   sources: [
	\     #{ name: 'file', options: #{ defaultAction: 'feedkeys' } },
	\   ],
	\   uiParams: #{
	\     ff: #{
	\       startFilter: v:true,
	\       replaceCol: match(getcmdline()[: getcmdpos() - 2],
	\                         '\f*$') + 1,
	\     },
	\   },
	\ })<CR><Cmd>call setcmdline('')<CR><CR>

Q: I want to switch sources without clear current filter input.

A: >
	nnoremap <buffer> ff
	\ <Cmd>call ddu#ui#do_action('updateOptions', #{
	\   sources: [
	\     #{ name: 'file' },
	\   ],
	\ })<CR>

Q: I want to use existing buffer to show preview.

A: Please use "no" in |ddu-ui-ff-param-previewSplit|.

Q: ":UniteNext"/":UnitePrevious"/":Denite -resume -cursor-pos=+1 -immediately"
   like commands are available?

A: >
	nnoremap <C-n>
	\ <Cmd>call ddu#ui_action('files', 'cursorNext')<CR>
	\ <Cmd>call ddu#ui_action('files', 'itemAction')<CR>
	nnoremap <C-p>
	\ <Cmd>call ddu#ui_action('files', 'cursorPrevious')<CR>
	\ <Cmd>call ddu#ui_action('files', 'itemAction')<CR>

Q: I want to display cursor mark on the left of ddu window like
"telescope.nvim".

A: >
	autocmd FileType ddu-ff call s:ddu_ff_my_settings()
	function s:ddu_ff_my_settings() abort
	  setlocal signcolumn=yes
	  autocmd CursorMoved <buffer> call s:update_cursor()
	endfunction
	
	function s:update_cursor()
	  sign unplace 100
	  sign define cursor text=>> texthl=Search
	  execute printf('sign place 100 line=%d name=cursor buffer=%s',
	        \ '.'->line(), '%'->bufnr())
	endfunction

Q: How do I set the floating title with list style ?

A: >
	call ddu#custom#patch_global(#{
	  \   uiParams: #{
	  \     ff: #{
	  \       floatingBorder: 'rounded',
	  \       floatingTitle: [['ddu', 'Red'], ['title', 'Blue']],
	  \     }
	  \   },
	  \ })

Q: I want to align column when |ddu-ui-ff-param-prompt| is set.

A: You can set 'signcolumn' option in UI buffer.

Q: When calling |ddu-ui-ff-action-quit| or |ddu-ui-ff-action-itemAction| from
insert mode of the filter window, it remains insert mode.

A: It is the feature.  Because |ddu#ui#do_action()| does not change any mode.
You must escape insert mode when leave from the filter window.
>
	autocmd FileType ddu-ff-filter call s:ddu_ff_filter_my_settings()
	function s:ddu_ff_filter_my_settings() abort
	  inoremap <buffer> <Esc>
	  \ <Esc><Cmd>call ddu#ui#do_action('quit')<CR>
	  inoremap <buffer> <CR>
	  \ <ESC><Cmd>call ddu#ui#do_action('itemAction')<CR>
	endfunction
<

Q: I cannot see what item is selected in the filter window.

A: You can set 'cursorline' option in ddu buffer.
>
	autocmd FileType ddu-ff call s:ddu_ff_my_settings()
	function s:ddu_ff_my_settings() abort
	  setlocal cursorline
	endfunction
<

Q: I want to change preview cursor on the top.

A: >
	call ddu#custom#patch_global(#{
	      \   uiParams: #{
	      \     ff: #{
	      \       onPreview: denops#callback#register(
	      \         { args -> execute('normal! zt') }
	      \       ),
	      \     },
	      \   },
	      \ })

==============================================================================
COMPATIBILITY					*ddu-ui-ff-compatibility*

2023.06.11
* Does not restore to normal mode automatically.  It should be configured by
  user.

2023.05.20
* 'signcolumn' option does not be set automatically.

2023.03.19
* Remove "ddu#ui#ff#get_item()".  Please use "ddu#ui#get_item()" instead.
* Remove "ddu#ui#ff#close()".  Please use "closeFilterWindow" action instead.

2023.02.15
* Remove "previewVertical".  Please use "previewSplit" instead.

2022.12.28
* Remove 'cursorline' set.

2022.11.18
* Require neovim 0.8.

2022.09.06
* "ddu#ui#ff#execute()" does not execute ":redraw" automatically.

2022.02.07
* Rename to "ff".

2022.02.01
* Rename "filterPosition" to "filterFloatingPosition".

2022.01.29
* Rename "ddu#ui#ff#do_map()" to "ddu#ui#ff#do_action()".

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
